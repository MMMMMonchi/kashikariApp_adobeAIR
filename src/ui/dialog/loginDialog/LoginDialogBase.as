////////////////////////////////////////////////////////////////////////ログインの手続きを行う一番最初に起動するダイアログ//////////////////////////////////////////////////////////////////////package ui.dialog.loginDialog {	import flash.display.Bitmap;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFormat;	import MainContainer;	import flash.text.TextFieldAutoSize;	import common.CreateNewPage;	import ui.page.friendItemPage.FriendItemPage;	import common.CreateNewDialog;	public class LoginDialogBase extends Sprite{				[Embed(source = "../../../uiImage/page/loginPage/loginPageBackground.png")]		public var _pageBackground:Class;		private var _embedImage:Bitmap;		private var _loginButton:Sprite;		public function LoginDialogBase() {			_embedImage = new _pageBackground();			addChild(_embedImage);						makeContents();		}				private function makeContents():void {									//暫定のログインボタンを生成する			_loginButton = new Sprite()			_loginButton.graphics.beginFill(0xff00ff, 0.5);			_loginButton.graphics.drawEllipse(0, 0, 300, 100);			_loginButton.graphics.endFill();			_loginButton.x = MainContainer.IPHONE_WIDTH / 2 - _loginButton.width / 2;			_loginButton.y = MainContainer.IPHONE_HEIGHT / 2 - _loginButton.height / 2;			addChild(_loginButton);						//ボタンのテキスト部分を生成する。			var buttonText:TextField = new TextField();			buttonText.autoSize = TextFieldAutoSize.LEFT;			buttonText.text = "ログインはこちら";			buttonText.width = _loginButton.width;			buttonText.height = _loginButton.height;			//フォントを設定する			var textFormat:TextFormat = new TextFormat();			textFormat.size = 30;			textFormat.color = 0xeeeeee;			buttonText.setTextFormat(textFormat);			//位置を調整する			buttonText.x = _loginButton.width / 2 - buttonText.width / 2;			buttonText.y = _loginButton.height / 2 - buttonText.height / 2;			_loginButton.addChild(buttonText);						//ログインボタンにイベントを設定する			_loginButton.addEventListener(MouseEvent.CLICK, onMDownLoginButton);					}				private function onMDownLoginButton(e:MouseEvent):void {			CreateNewDialog.closeDialog(this);		}			}}