////////////////////////////////////////////////////////////////////////ページを切り替えるクラス//////////////////////////////////////////////////////////////////////package common {	import flash.display.DisplayObject;	import flash.display.Sprite;	import aeon.animators.Tweener;	import aeon.easing.Quint;	import aeon.events.AnimationEvent;	public class CreateNewPage extends Sprite{				private const PAGE_DISPLAY_TIME:int = 600;		private const PAGE_HIDE_TIME:int = 600;		private var _newPage:Sprite;		private var _currentPage:Sprite;		private var _parentObject:Sprite;		private var _newPageClass:Class;		private var _newPageObject:Sprite = null;		private var _callBackMethod:Function;		public function CreateNewPage(parentObject:Object, currentPage:Object, newPageClass:Class, newPageObject:Object, callBackMethod:Function = null) {						//引数で受け取ったオブジェクトを変数に代入			_parentObject = Sprite(parentObject);			_currentPage = Sprite(currentPage);			_newPageClass = newPageClass;			if (newPageObject != null) {					_newPageObject = Sprite(newPageObject);			}			_callBackMethod = callBackMethod;						hideCurrentPage();						/*//現在のページを削除する			Sprite(parentObject).removeChild(Sprite(currentPage));			currentPage = null;						//新しいページを透明な状態で生成する。			var newPage:Sprite = new newPageClass();			newPage.alpha = 0;						Sprite(parentObject).addChild(newPage);			_global.mainContainer._currentPage = newPage;						//透過度のアニメーションをつける			var tweener:Tweener = new Tweener(newPage, { alpha:Tweener.CURRENT_VALUE }, { alpha:1 }, PAGE_DISPLAY_TIME, Quint.easeOut);*/		}				//////////////////////////////////////////////////////////////////////		//現在のページを隠すアニメーションを生成するメソッド		//////////////////////////////////////////////////////////////////////				private function hideCurrentPage():void {						//現在ページを隠すアニメーションを実行する			var tweener:Tweener = new Tweener(_currentPage, { alpha:Tweener.CURRENT_VALUE }, { alpha:0 },PAGE_HIDE_TIME, Quint.easeOut);			tweener.addEventListener(AnimationEvent.END, onHideAnimationEnd);			tweener.start();		}				//////////////////////////////////////////////////////////////////////		//新ページの現れるアニメーションをスタートするメソッド		//////////////////////////////////////////////////////////////////////				private function onHideAnimationEnd(e:AnimationEvent):void {						//ページがすでにある場合とない場合で分岐			if (_newPageObject == null) {					//新ページを生成する。				_newPage = new _newPageClass();			}else {				//引数で受け取ったオブジェクト使用する				_newPage = _newPageObject;			}			_newPage.alpha = 0;			_parentObject.addChild(_newPage);						//新ページが現れるアニメーションを設定する			var tweener:Tweener = new Tweener(_newPage, { alpha:Tweener.CURRENT_VALUE }, { alpha:1 }, PAGE_DISPLAY_TIME, Quint.easeOut);			tweener.addEventListener(AnimationEvent.END, onDisplayAnimationEnd);			tweener.start();		}				//////////////////////////////////////////////////////////////////////		//現在ページが現れた瞬間に呼ばれるメソッド		//////////////////////////////////////////////////////////////////////				private function onDisplayAnimationEnd(e:AnimationEvent):void {			//現在ページを削除する。			/*_parentObject.removeChild(_currentPage);			_currentPage = null;*/						_global.mainContainer._currentPage = _newPage;			if (_callBackMethod != null) {				_callBackMethod();			}		}	}}